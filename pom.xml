<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.mevenide</groupId>
  <artifactId>mevenide-parent</artifactId>
  <version>0.1.0</version>
  <packaging>pom</packaging>

  <name>${project.groupId}:${project.artifactId}</name>
  <description>Common parent POM for building Java projects with Maven.</description>
  <url>https://github.com/mevenide-org/mevenide-parent</url>

  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Christopher Ng</name>
      <email>chris@mevenide.org</email>
      <organization>mevenide.org</organization>
      <organizationUrl>https://github.com/mevenide</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/mevenide/mevenide-parent.git</connection>
    <developerConnection>scm:git:git@github.com:mevenide/mevenide-parent.git</developerConnection>
    <url>https://github.com/mevenide/mevenide-parent.git/tree/master</url>
    <tag>0.1.0</tag>
  </scm>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <project.build.outputTimestamp>2024-11-08T17:26:13Z</project.build.outputTimestamp> <!-- set by
        `git-commit-id-maven-plugin` -->

    <!-- exported to child projects -->
    <build-helper-maven-plugin.version>3.6.0</build-helper-maven-plugin.version>
    <dependency-check-maven.version>11.1.0</dependency-check-maven.version>
    <exec-maven-plugin.version>3.5.0</exec-maven-plugin.version>
    <maven-clean-plugin.version>3.4.0</maven-clean-plugin.version>
    <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
    <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
    <maven-surefire-plugin.version>3.5.2</maven-surefire-plugin.version>
    <maven-failsafe-plugin.version>${maven-surefire-plugin.version}</maven-failsafe-plugin.version>

    <spotless.version>2.44.0.BETA4</spotless.version>
    <spotless.googlejavaformat.version>1.24.0</spotless.googlejavaformat.version>
    <spotless.check.skip>false</spotless.check.skip>
    <versions-maven-plugin.version>2.17.1</versions-maven-plugin.version>

    <maven.compiler.release>21</maven.compiler.release>
    <maven.compiler.jdk>21</maven.compiler.jdk>
    <maven.compiler.guava-version>33.3.1-jre</maven.compiler.guava-version> <!-- the guava version
        used by the compiler -->
    <errorprone.version>2.35.1</errorprone.version>
    <plexus-compiler.version>2.15.0</plexus-compiler.version>
    <maven.compiler.xlint-arg>
      <!--
      -processing: disable warnings about unhandled annotations
      -classfile: disable classfile warnings because of https://github.com/google/dagger/issues/945
      -serial: disable serialVersionUID warnings as we'd probably prefer deserialization to 
          break if there is any potential incompatibility
      -->
      -Xlint:all,-processing,-classfile,-serial
    </maven.compiler.xlint-arg>
    <maven.compiler.test-xlint-arg>${maven.compiler.xlint-arg}</maven.compiler.test-xlint-arg>
    <errorprone.compile.excludedRegex>
      .*/target/generated-sources/.*
    </errorprone.compile.excludedRegex>
    <errorprone.testCompile.excludedRegex>
      .*/target/generated-test-sources/.*
    </errorprone.testCompile.excludedRegex>

    <maven.git-commit-id.skipPoms>false</maven.git-commit-id.skipPoms>
    <maven.git-commit-id.generatePropertiesFile>false</maven.git-commit-id.generatePropertiesFile>
    <maven.git-commit-id.dirty-suffix>-devel</maven.git-commit-id.dirty-suffix>

    <maven-failsafe-plugin.forkCount>1</maven-failsafe-plugin.forkCount>
    <maven-failsafe-plugin.argLine>-Xmx500m</maven-failsafe-plugin.argLine>

    <maven-surefire-plugin.forkCount>1</maven-surefire-plugin.forkCount>
    <maven-surefire-plugin.argLine>-Xmx500m</maven-surefire-plugin.argLine>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Manage errorprone dependency as it is used for compilation -->
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotation</artifactId>
        <version>${errorprone.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotations</artifactId>
        <version>${errorprone.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_ant</artifactId>
        <version>${errorprone.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_check_api</artifactId>
        <version>${errorprone.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_core</artifactId>
        <version>${errorprone.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_docgen</artifactId>
        <version>${errorprone.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_docgen_processor</artifactId>
        <version>${errorprone.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_refaster</artifactId>
        <version>${errorprone.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_test_helpers</artifactId>
        <version>${errorprone.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.7.1</version>
      </extension>
    </extensions>

    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-artifact-plugin</artifactId>
          <version>3.5.3</version>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <release>${maven.compiler.release}</release>
            <showWarnings>true</showWarnings>
            <showDeprecation>true</showDeprecation>
            <debug>true</debug>
            <debuglevel>lines,vars,source</debuglevel>
            <compilerArgs>
              <arg>${maven.compiler.xlint-arg}</arg>
            </compilerArgs>
            <encoding>${project.build.sourceEncoding}</encoding>
          </configuration>
          <dependencies>
            <dependency>
              <!-- for errorprone uses 22 dagger need >23
              or Verify.verify(boolean,String,String,Object) doesn't exist -->
              <groupId>com.google.guava</groupId>
              <artifactId>guava</artifactId>
              <version>${maven.compiler.guava-version}</version>
            </dependency>
            <!-- make sure it uses the right versions of plexus -->
            <dependency>
              <groupId>org.codehaus.plexus</groupId>
              <artifactId>plexus-compiler-api</artifactId>
              <version>${plexus-compiler.version}</version>
            </dependency>
            <dependency>
              <groupId>org.codehaus.plexus</groupId>
              <artifactId>plexus-compiler-javac</artifactId>
              <version>${plexus-compiler.version}</version>
            </dependency>
            <dependency>
              <groupId>org.codehaus.plexus</groupId>
              <artifactId>plexus-compiler-manager</artifactId>
              <version>${plexus-compiler.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.8.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.1.3</version>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>3.2.7</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>3.1.3</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.4.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.11.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.6.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>4.0.0-M16</version>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.3.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build-helper-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
          <configuration>
            <processDependencyManagementTransitive>false</processDependencyManagementTransitive>
            <ruleSet>
              <comparisonMethod>maven</comparisonMethod>
              <ignoreVersions combine.children="append">
                <ignore>
                  <type>regex</type>
                  <version>.*-alpha[^.]*$</version>
                </ignore>
                <ignoreVersion>
                  <type>regex</type>
                  <version>.*-atlassian-\d+(?:\.\d+)?$</version>
                </ignoreVersion>
                <ignoreVersion>
                  <type>regex</type>
                  <version>.*[aA]lpha.*$</version>
                </ignoreVersion>
                <ignoreVersion>
                  <type>regex</type>
                  <version>.*-beta.*$</version>
                </ignoreVersion>
                <ignoreVersion>
                  <type>regex</type>
                  <version>.*-cloudera\.\d+$</version>
                </ignoreVersion>
                <ignoreVersion>
                  <type>regex</type>
                  <version>.*-jboss-\d+$</version>
                </ignoreVersion>
                <ignoreVersion>
                  <type>regex</type>
                  <version>.*-m\d+$</version>
                </ignoreVersion>
                <ignoreVersion>
                  <type>regex</type>
                  <version>.*\.M\d+$</version>
                </ignoreVersion>
                <ignoreVersion>
                  <type>regex</type>
                  <version>.*rc\d+$</version>
                </ignoreVersion>
              </ignoreVersions>
              <rules combine.children="append">
                <rule>
                  <groupId>com.google.protobuf</groupId>
                  <artifactId>protobuf-java*</artifactId>
                  <ignoreVersions>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>4\.0\.0-rc.*$</version> <!-- 4.0.0-rcX have not been updated in
                          years -->
                    </ignoreVersion>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>.*-RC\d+$</version>
                    </ignoreVersion>
                  </ignoreVersions>
                </rule>
                <rule>
                  <groupId>commons-collections</groupId>
                  <artifactId>commons-collections</artifactId>
                  <ignoreVersions>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>\d{8}(?:\..+)?$</version> <!-- ancient invalid ymd versions -->
                    </ignoreVersion>
                  </ignoreVersions>
                </rule>
                <rule>
                  <groupId>io.grpc</groupId>
                  <ignoreVersions>
                    <!-- 1.63.1+ protoc-gen-grpc requires C lib versions that we don't have on
                    CentOS -->
                    <ignoreVersion>
                      <type>regex</type>
                      <version>1\.63\.[2-9]+</version>
                    </ignoreVersion>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>1\.6[4-9]\..+</version>
                    </ignoreVersion>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>1\.[7-9]\d\..+</version>
                    </ignoreVersion>
                  </ignoreVersions>
                </rule>
                <rule>
                  <groupId>jakarta.inject</groupId>
                  <ignoreVersions>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>.*\.MR</version>
                    </ignoreVersion>
                  </ignoreVersions>
                </rule>
                <rule>
                  <groupId>javax.annotation</groupId>
                  <artifactId>jsr250-api</artifactId>
                  <ignoreVersions>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>1\.0-\d{8}.*$</version>
                    </ignoreVersion>
                  </ignoreVersions>
                </rule>
                <rule>
                  <groupId>javax.inject</groupId>
                  <artifactId>javax.inject</artifactId>
                  <ignoreVersions>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>1.0-PFD-\d+$</version>
                    </ignoreVersion>
                  </ignoreVersions>
                </rule>
                <rule>
                  <groupId>javax.xml.bind</groupId>
                  <artifactId>jaxb-api</artifactId>
                  <ignoreVersions>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>.*-b\d{6}\.\d{4}$</version>
                    </ignoreVersion>
                  </ignoreVersions>
                </rule>
                <rule>
                  <groupId>junit</groupId>
                  <ignoreVersions>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>.*-beta-\d+$</version>
                    </ignoreVersion>
                  </ignoreVersions>
                </rule>
                <rule>
                  <groupId>org.apache.hadoop</groupId>
                  <ignoreVersions>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>.*-cdh5.16.99</version>
                    </ignoreVersion>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>2.6.[1-9]</version>
                    </ignoreVersion>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>2\.[7-9]\..*</version>
                    </ignoreVersion>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>2\.1\d\..*</version>
                    </ignoreVersion>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>3\..*</version>
                    </ignoreVersion>
                  </ignoreVersions>
                </rule>
                <rule>
                  <groupId>org.apache.zookeeper</groupId>
                  <ignoreVersions>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>.*-cdh5\.16\.99</version>
                    </ignoreVersion>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>.*-cdh5\.99\..*</version>
                    </ignoreVersion>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>.*-cdh6.*</version>
                    </ignoreVersion>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>3\.4\.[6-9].*</version>
                    </ignoreVersion>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>3\.4\.1\d</version>
                    </ignoreVersion>
                  </ignoreVersions>
                </rule>
                <rule>
                  <groupId>org.junit.*</groupId>
                  <ignoreVersions>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>.+-M\d+</version>
                    </ignoreVersion>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>.+-RC\d+</version>
                    </ignoreVersion>
                  </ignoreVersions>
                </rule>
                <rule>
                  <groupId>org.postgres</groupId>
                  <ignoreVersions>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>.jre7$</version>
                    </ignoreVersion>
                  </ignoreVersions>
                </rule>
                <rule>
                  <groupId>org.scala-lang</groupId>
                  <ignoreVersions>
                    <ignoreVersion>
                      <type>regex</type>
                      <version>.*-M\d+(?:-.+)?$</version>
                    </ignoreVersion>
                  </ignoreVersions>
                </rule>
              </rules>
            </ruleSet>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <argLine>${maven-surefire-plugin.argLine}</argLine>
            <forkCount>${maven-surefire-plugin.forkCount}</forkCount>
            <reuseForks>true</reuseForks>
            <trimStackTrace>false</trimStackTrace>
            <systemPropertyVariables>
              <java.awt.headless>true</java.awt.headless>
            </systemPropertyVariables>
            <includes>
              <include>**/*Test.java</include>
            </includes>
            <excludes>
              <!-- Always exclude functional tests for surefire. These are
                  brought in later by the failsafe plugin. -->
              <include>**/*FunctionalTest.java</include>
              <include>**/*AcceptanceTest.java</include>
              <include>**/*IntegrationTest.java</include>
            </excludes>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-failsafe-plugin.version}</version>
          <configuration>
            <argLine>${maven-failsafe-plugin.argLine}</argLine>
            <forkCount>${maven-failsafe-plugin.forkCount}</forkCount>
            <reuseForks>true</reuseForks>
            <runOrder>alphabetical</runOrder>
            <trimStackTrace>false</trimStackTrace>
            <systemPropertyVariables>
              <project.build.directory>${project.build.directory}</project.build.directory>
            </systemPropertyVariables>
          </configuration>
          <executions>
            <execution>
              <id>default-integration-test</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
              <configuration>
                <includes>
                  <include>**/*FunctionalTest.java</include>
                  <include>**/*AcceptanceTest.java</include>
                  <include>**/*IntegrationTest.java</include>
                </includes>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${spotless.version}</version>
          <configuration>
            <checkSkip>${spotless.check.skip}</checkSkip>
            <java>
              <!-- apply a specific flavor of google-java-format and reflow long strings -->
              <googleJavaFormat>
                <version>${spotless.googlejavaformat.version}</version>
                <style>GOOGLE</style>
              </googleJavaFormat>
            </java>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>io.github.git-commit-id</groupId>
          <artifactId>git-commit-id-maven-plugin</artifactId>
          <version>9.0.1</version>
          <executions>
            <execution>
              <id>generate-git-info</id>
              <phase>initialize</phase>
              <goals>
                <goal>revision</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <skipPoms>${maven.git-commit-id.skipPoms}</skipPoms>
            <generateGitPropertiesFile>
              ${maven.git-commit-id.generatePropertiesFile}
            </generateGitPropertiesFile>
            <generateGitPropertiesFilename>
              ${maven.multiModuleProjectDirectory}/target/git.properties
            </generateGitPropertiesFilename>
            <commitIdGenerationMode>full</commitIdGenerationMode>
            <dateFormatTimeZone>UTC</dateFormatTimeZone>
            <gitDescribe>
              <dirty>${maven.git-commit-id.dirty-suffix}</dirty>
            </gitDescribe>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${exec-maven-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.owasp</groupId>
          <artifactId>dependency-check-maven</artifactId>
          <version>${dependency-check-maven.version}</version>
          <configuration>
            <failBuildOnCVSS>7</failBuildOnCVSS>
            <suppressionFiles>
              <suppressionFile>/etc/maven/common-owasp-suppression.xml</suppressionFile>
            </suppressionFiles>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.sonatype.central</groupId>
          <artifactId>central-publishing-maven-plugin</artifactId>
          <version>0.6.0</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-toolchains-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <goals>
              <goal>toolchain</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <toolchains>
            <jdk>
              <version>${maven.compiler.jdk}</version>
            </jdk>
          </toolchains>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[3.6.3,)</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.github.git-commit-id</groupId>
        <artifactId>git-commit-id-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <tagNameFormat>@{project.version}</tagNameFormat>
          <releaseProfiles>custom-release-profile</releaseProfiles>
          <useReleaseProfile>false</useReleaseProfile>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>

      <!-- For debugging -->
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>package</phase>
            <goals>
              <goal>jar-no-fork</goal>
              <goal>test-jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.sonatype.central</groupId>
        <artifactId>central-publishing-maven-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <publishingServerId>central</publishingServerId>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>errorprone</id>
      <activation>
        <property>
          <name>!noChecks</name>
        </property>
      </activation>
      <properties>
        <maven.compiler.errorprone.compilerArgs>
          <![CDATA[-Xplugin:ErrorProne -XepDisableWarningsInGeneratedCode -XepExcludedPaths:${errorprone.compile.excludedRegex}]]>
        </maven.compiler.errorprone.compilerArgs>
        <maven.compiler.errorprone.testCompilerArgs>
          <![CDATA[-Xplugin:ErrorProne -XepDisableWarningsInGeneratedCode -XepExcludedPaths:${errorprone.testCompile.excludedRegex} -Xep:ReturnValueIgnored:WARN -Xep:CheckReturnValue:WARN]]>
        </maven.compiler.errorprone.testCompilerArgs>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.owasp</groupId>
              <artifactId>dependency-check-maven</artifactId>
              <executions>
                <execution>
                  <goals>
                    <goal>check</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <artifactId>maven-compiler-plugin</artifactId>
              <configuration>
                <showWarnings>true</showWarnings>
                <fork>true</fork>
                <compilerArgs combine.children="append">
                  <arg>-Werror</arg>
                  <arg>-XDcompilePolicy=simple</arg>
                  <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                  <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                  <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                  <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
                  <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
                  <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                  <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                  <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                  <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                  <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                </compilerArgs>
                <annotationProcessorPaths combine.children="append">
                  <path>
                    <groupId>com.google.errorprone</groupId>
                    <artifactId>error_prone_core</artifactId>
                    <version>${errorprone.version}</version>
                  </path>
                </annotationProcessorPaths>
              </configuration>
              <executions>
                <execution>
                  <id>default-compile</id>
                  <configuration>
                    <compilerArgs combine.children="append">
                      <arg>${maven.compiler.xlint-arg}</arg>
                      <arg>-Werror</arg>
                      <!-- error prone args needs to be together... https://github.com/google/error-prone/issues/1582 -->
                      <arg>${maven.compiler.errorprone.compilerArgs}</arg>
                    </compilerArgs>
                  </configuration>
                </execution>
                <execution>
                  <id>default-testCompile</id>
                  <configuration>
                    <compilerArgs combine.children="append">
                      <arg>${maven.compiler.test-xlint-arg}</arg>
                      <arg>-Werror</arg>
                      <!-- error prone args needs to be together... https://github.com/google/error-prone/issues/1582 -->
                      <arg>${maven.compiler.errorprone.testCompilerArgs}</arg>
                    </compilerArgs>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>noChecks</id>
      <activation>
        <property>
          <name>noChecks</name>
        </property>
      </activation>

      <properties>
        <skipTests>true</skipTests>
        <spotless.check.skip>true</spotless.check.skip>
      </properties>
    </profile>
    <profile>
      <id>custom-release-profile</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <phase>package</phase>
                <goals>
                  <goal>jar</goal>
                  <goal>test-jar</goal>
                </goals>
                <configuration>
                  <additionalOptions>-package</additionalOptions> <!-- junit5 test classes are
                      usually package-private -->
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- profile that can be enabled to check whether there are any newer versions of
          `google-java-format` -->
      <id>check-google-java-format-version</id>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>com.google.googlejavaformat</groupId>
            <artifactId>google-java-format</artifactId>
            <version>${spotless.googlejavaformat.version}</version>
          </dependency>
        </dependencies>
      </dependencyManagement>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <!-- for some reason having dependencyManagementTransitive disabled stops the above 
                  being checked -->
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>versions-maven-plugin</artifactId>
              <configuration>
                <processDependencyManagementTransitive>true</processDependencyManagementTransitive>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>owasp</id>
      <activation>
        <property>
          <name>owasp</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
